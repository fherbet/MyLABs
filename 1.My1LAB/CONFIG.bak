---

- include: GET_DATA_PE.yml
  tags:
  - getdatape
  - allinone
  - configpe



- name: IPVPN_FABRIC CONFIG PLAYBOOK
  hosts: all
  connection: local
  gather_facts: no


  vars:
    osainstall:
      host: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: osainstall
      password: 0sainstall
      transport: cli


  tasks:

########JINJA2 TEMPLATES CREATION
  - name: Create target directory
    file: path=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/ state=directory mode=0755
    tags:
    - basic
    - final
    - test
    - allinone

  - name: Create Basic Config
    template: src=templates/COMMON/BASIC_CONFIG.j2 dest=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-BASIC.conf
    tags:
    - basic
    - allinone

  - name: Create Final Config
    template: src=templates/{{ CUST_NAME }}/BASE.j2 dest=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL.conf
    tags:
    - final
    - allinone

  - name: Create PE Qos/Shaping
    template: src=templates/COMMON/QOS_PE.j2 dest=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL-PE.conf
    tags:
    - final
    - allinone
    - configpe

########PUSH BASIC CONFIG
  - name: Configure SSH via telnet / osainstall / napalm
    napalm_install_config:
     hostname={{ COLT_LB.0.IP | ipaddr('address') }}
     username=osainstall
     dev_os=ios
     password=osainstall
     config_file=templates/COMMON/SSH.conf
     commit_changes=true
     replace_config=false
     optional_args="transport=telnet"
    ignore_errors: True
    tags:
    - allinone
    - ssh

  - name: Configure Basic Config  via ssh / osainstall / ios_config module / no save
    ios_config:
      #provider: osainstall
      host: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: osainstall
      password: osainstall
      authorize: yes
      auth_pass: osainstall
      transport: cli
      save: no
      #src: templates/COMMON/TACACS.txt
      src: configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-BASIC.conf
    ignore_errors: True
    tags:
    - allinone
    - configb


  - name: Configure Basic Config  via ssh / tacacs / napalm
    napalm_install_config:
     hostname={{ COLT_LB.0.IP | ipaddr('address') }}
     username=osainstall
     dev_os=ios
     password=0sainstall
     config_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-BASIC.conf
     commit_changes=true
     replace_config=false
     get_diffs=True
     diff_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-BASIC.diff
    tags:
    - configbtacacs

########PUSH FINAL CONFIG
  - name: Configure Final Config  via ssh / tacacs / napalm
    napalm_install_config:
     hostname={{ COLT_LB.0.IP | ipaddr('address') }}
     username=osainstall
     dev_os=ios
     password=0sainstall
     config_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL.conf
     commit_changes=true
     replace_config=false
     get_diffs=True
     diff_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL.diff
     #timeout=120
    tags:
    - configf
    - allinone

########REMOVE TACACS
  - name: Remove Tacacs with osaistall
    ios_config:
      #provider: osainstall
      host: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: osainstall
      password: 0sainstall
      transport: cli
      save: no
      src: templates/COMMON/NO_TACACS.txt
    tags:
    - notacacs


########PUSH CONFIG PE
  - name: Configure Qos/Shaping on PE
    napalm_install_config:
     hostname={{ hostvars[ORDER].SAR }}
     username=osainstall
     dev_os={{ hostvars[SAR].os }}
     password=0sainstall
     config_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL-PE.conf
     commit_changes=True
     replace_config=false
     get_diffs=True
     diff_file=configs/{{ CUST_NAME }}/{{SITE_NAME_ALIAS}}-{{ORDER}}/{{SITE_NAME_ALIAS}}-{{ORDER}}-FINAL-PE.diff
     timeout=120
    when: SAR_OS == "junos" or SAR_OS == "iosxr"
    tags:
    - configpe
    - allinone

########CHECK

  - name: REFRESH BGP sessions
    ios_command:
      commands:
        - clear ip bgp * soft
      host: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: osainstall
      password: 0sainstall
      transport: cli
    tags:
    - check
    - checkpostSA
    - allinone

  - name: CHECK / Napalm Get Facts from Device
    napalm_get_facts:
      hostname: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: "osainstall"
      dev_os: "ios"
      password: "0sainstall"
      filter: ['facts','interfaces_ip','bgp_neighbors']
    register: napalm_facts
    tags:
    - check
    - checkpostSA
    - allinone

  - name: CHECK / Print BGP details
    debug:
     msg: "{{ napalm_facts.ansible_facts.bgp_neighbors.global.peers }}"
    tags:
    - check
    - checkpostSA
    - allinone


  - name: CHECK / Ping Remote Test IP(s)
    napalm_ping:
      hostname: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: "osainstall"
      dev_os: "ios"
      password: "0sainstall"
      source: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      destination: "{{ item }}"
      count: 5
    with_items: "{{ TEST_IP[SUBVPN.0.NAME] }}"
    register: pingtest
    tags:
    - check
    - allinone

  - name: CHECK / Print PINGTEST
    debug:
     msg: "{{ pingtest.results | map(attribute='results') | list  }}"
    tags:
    - check
    - allinone

########CHECK PING WITH LAN SOURCE
  - name: CHECK / Ping Remote Test IP(s) from source {{ SUBVPN.0.LAN.0.IP }} > {{ SUBVPN.0.LAN.0.IP | regex_replace(' ') }}
    napalm_ping:
      hostname: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: "osainstall"
      dev_os: "ios"
      password: "0sainstall"
      source: "{{ SUBVPN.0.LAN.0.IP | regex_replace(' ') | ipaddr('address') }}"
      destination: "{{ item }}"
      count: 5
    with_items: "{{ TEST_IP[SUBVPN.0.NAME] }}"
    register: pingtest
    tags:
    - checkpostSA


  - name: CHECK / print PINGTEST from source {{ SUBVPN.0.LAN.0.IP }}
    debug:
     msg: "{{ pingtest.results | map(attribute='results') | list  }}"
    tags:
    - checkpostSA


########CHECK NAT WITH SH IP NA TR
  - name: CHECK NAT / WITH SH IP NA TR
    ios_command:
      commands: sh ip na tr
      host: "{{ COLT_LB.0.IP | ipaddr('address') }}"
      username: osainstall
      password: 0sainstall
      transport: cli
    register: shipnatr
    tags:
    - checkpostSA
    - shipnatr

  - name: CHECK NAT / Print SH IP NA TR
    debug:
     msg: "{{ shipnatr.stdout_lines }}"
    tags:
    - checkpostSA
    - shipnatr



########EMAILS

  - name: Get Timestamp
    command: date +%Y%m%d-%H%M%S
    register: timestamp
    tags:
    - ipcfg
    - iptst

  - name: Send Email after CPE config is completed
    mail:
      host: localhost
      from: me@home.net
      #to: msimonpietri@colt.net
      to: '{{EMAIL_DEST_IPCFG[COUNTRY]}}'
      subject: '{{ CUST_NAME }} {{COUNTRY}} {{SITE_NAME_ALIAS}} {{ORDER}} {{ COLT_LB.0.IP|ipaddr("address") }} >>>> IPCFG DONE on {{ timestamp.stdout }}'
      body: |
        {{ CUST_NAME }} {{SITE_NAME_ALIAS}} {{ORDER}} has been successfully configured on {{ timestamp.stdout }}

        link id : {{ LINK_ID }}
        lb : {{ COLT_LB.0.IP|ipaddr("address") }}
        wan : {{ SUBVPN.0.WAN.0.IP }}
        bandwidth : {{ SERVICE_BW }}
        host : {{ hostvars[ORDER].facts.hostname }}
        model : {{ hostvars[ORDER].facts.model }}
        s/n : {{ hostvars[ORDER].facts.serial_number }}
        ios : {{ hostvars[ORDER].facts.os_version }}

        BGP peers:
        {{ hostvars[ORDER].bgp_neighbors.global.peers|to_nice_json }}

        IP interfaces :
        {{ hostvars[ORDER].interfaces_ip|to_nice_json }}

    tags:
    - ipcfg

  - name: Send Email after Service ACTIVATION is completed
    mail:
      host: localhost
      from: me@home.net
      to: '{{EMAIL_DEST_IPTST[COUNTRY]}}'
      subject: '{{ CUST_NAME }} {{COUNTRY}} {{SITE_NAME_ALIAS}} {{ORDER}} {{ SERVICE_BW }} >>>> SERVICE ACTIVATION DONE'
      body: |
        {{ CUST_NAME }} {{SITE_NAME_ALIAS}} {{ORDER}} has been successfully activated on {{ timestamp.stdout }}

        host : {{ hostvars[ORDER].facts.hostname }}
        model : {{ hostvars[ORDER].facts.model }}
        link id : {{ LINK_ID }}
        lb : {{ COLT_LB.0.IP|ipaddr("address") }}
        wan : {{ SUBVPN.0.WAN.0.IP }}
        bandwidth : {{ SERVICE_BW }}


        IP interfaces :
        {{ hostvars[ORDER].interfaces_ip|to_nice_json }}

    tags:
    - iptst



- include: BGP_PE.yml
  tags:
  - bgppe
